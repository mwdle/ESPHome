# See the README instructions for using this common configuration.
esphome:
  name: ${device_name}
  comment: ${device_description}

esp8266:
  board: esp01_1m
  restore_from_flash: true

wifi:
  ssid: !secret wifissid
  password: !secret wifipass
  manual_ip:
    static_ip: ${ip_address}
    gateway: ${gateway}
    subnet: ${subnet}

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback Hotspot"
    password: !secret fallbackpass

captive_portal:

# Enable logging
logger:
  baud_rate: 0 #disable UART logging

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key

# Enable OTA updates
ota:
  - platform: esphome
    id: my_ota
    password: !secret otapass

# Enable web server
web_server:
  version: 3
  port: 80
  auth:
    username: !secret otauser
    password: !secret otapass

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: True
    name: "${friendly_name} Button"
    id: "${device_name}_button"
    on_press:
      - switch.toggle: "${device_name}_relay"
  - platform: status
    name: "${friendly_name} Status"
    id: "${device_name}_status"

switch:
  - platform: gpio
    name: "${friendly_name} Relay"
    id: "${device_name}_relay"
    restore_mode: RESTORE_DEFAULT_OFF
    pin: GPIO14
    on_turn_on:
      - output.turn_on: led
    on_turn_off:
      - output.turn_off: led

button:
  - platform: restart
    name: "Restart ${friendly_name}"

status_led:
  pin:
    number: GPIO12
    inverted: yes

output:
  - platform: gpio
    pin: GPIO13
    inverted: true
    id: led

sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi signal"
    id: "${device_name}_wifi_signal"
    update_interval: 60s
  - platform: uptime
    name: "${friendly_name} Uptime"
    id: "${device_name}_uptime"
    update_interval: 60s

text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome Version"
    id: "${device_name}_esphome_version"